{{ config(materialized='table') }}

WITH gap_fill_ambassadors AS (
    SELECT
        *
    FROM
        GAP_FILL(
            (SELECT * FROM {{ ref('int__marketplace__ambassadors_history') }}),
            ts_column => 'dbt_valid_from',
            bucket_width => INTERVAL 1 DAY,
            partitioning_columns => ['ambassador_id','ambassador_classification','ambassador_company_name','company_sector_name','ambassador_job_title','address_country','address_administrative_area_level_1_region_fr','address_administrative_area_level_2_department_fr','address_city_fr', 'address_postal_code'],
            value_columns => [
                ('ambassador_is_published','locf'),
                ('ambassador_is_visible','locf'),
                ('ambassador_is_available','locf')
            ]
        )
),

warm_up_ambassadors AS (
    SELECT
        ambassador_id,
        ambassador_warmup_started_at,
        ambassador_warmup_ended_at
    FROM
        {{ ref('base__marketplace__ambassadors') }}
    WHERE
        ambassador_warmup_started_at IS NOT NULL
        AND ambassador_warmup_ended_at IS NOT NULL
)

SELECT
    gap_fill_ambassadors.*,
    warm_up_ambassadors.ambassador_id IS NOT NULL AS ambassador_is_in_warm_up,
FROM
    gap_fill_ambassadors
LEFT JOIN
    warm_up_ambassadors
    ON warm_up_ambassadors.ambassador_id = gap_fill_ambassadors.ambassador_id
    AND dbt_valid_from BETWEEN ambassador_warmup_started_at AND ambassador_warmup_ended_at
